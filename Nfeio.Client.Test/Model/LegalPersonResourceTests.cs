/* 
 * Service Invoice API (api.nfe.io)
 *
 * Seja bem-vindo a documentação do NFe.io!    Nossa API foi criada utilizando o padrão REST que possibilita a integração de seu sistema ao nosso, sendo assim você também pode extender ou   recriar as funcionalidades existentes na nossa plataforma, tudo isso consumindo a API que está documentada abaixo.    ### Como usar a documentação?  Logo a seguir você encontrará todos os recursos e metódos suportados pela API, sendo que essa página possibilita que você teste os recursos e métodos dirementamente através dela.     ### Como funciona a autenticação?  Você precisa de uma **chave de API (API Key)** para identificar a conta que está realizando solicitações para a API. Para isso você deve colocar sua chave de API no campo que se encontra topo desta página para que os métodos funcionem corretamente.  No seu código e integração temos suporte para autenticação de diversas formas sendo eles: **HTTP Header (Authorization ou X-NFEIO-APIKEY)** ou **HTTP Query String (api_key)** nos dois modos passando o valor da sua chave de api (API Key).  
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing LegalPersonResource
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class LegalPersonResourceTests
    {
        // TODO uncomment below to declare an instance variable for LegalPersonResource
        //private LegalPersonResource instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of LegalPersonResource
            //instance = new LegalPersonResource();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LegalPersonResource
        /// </summary>
        [Test]
        public void LegalPersonResourceInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" LegalPersonResource
            //Assert.IsInstanceOfType<LegalPersonResource> (instance, "variable 'instance' is a LegalPersonResource");
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'TradeName'
        /// </summary>
        [Test]
        public void TradeNameTest()
        {
            // TODO unit test for the property 'TradeName'
        }
        /// <summary>
        /// Test the property 'FederalTaxNumber'
        /// </summary>
        [Test]
        public void FederalTaxNumberTest()
        {
            // TODO unit test for the property 'FederalTaxNumber'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Test]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Test]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }
        /// <summary>
        /// Test the property 'OpenningDate'
        /// </summary>
        [Test]
        public void OpenningDateTest()
        {
            // TODO unit test for the property 'OpenningDate'
        }
        /// <summary>
        /// Test the property 'TaxRegime'
        /// </summary>
        [Test]
        public void TaxRegimeTest()
        {
            // TODO unit test for the property 'TaxRegime'
        }
        /// <summary>
        /// Test the property 'LegalNature'
        /// </summary>
        [Test]
        public void LegalNatureTest()
        {
            // TODO unit test for the property 'LegalNature'
        }
        /// <summary>
        /// Test the property 'EconomicActivities'
        /// </summary>
        [Test]
        public void EconomicActivitiesTest()
        {
            // TODO unit test for the property 'EconomicActivities'
        }
        /// <summary>
        /// Test the property 'CompanyRegistryNumber'
        /// </summary>
        [Test]
        public void CompanyRegistryNumberTest()
        {
            // TODO unit test for the property 'CompanyRegistryNumber'
        }
        /// <summary>
        /// Test the property 'RegionalTaxNumber'
        /// </summary>
        [Test]
        public void RegionalTaxNumberTest()
        {
            // TODO unit test for the property 'RegionalTaxNumber'
        }
        /// <summary>
        /// Test the property 'MunicipalTaxNumber'
        /// </summary>
        [Test]
        public void MunicipalTaxNumberTest()
        {
            // TODO unit test for the property 'MunicipalTaxNumber'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'CreatedOn'
        /// </summary>
        [Test]
        public void CreatedOnTest()
        {
            // TODO unit test for the property 'CreatedOn'
        }
        /// <summary>
        /// Test the property 'ModifiedOn'
        /// </summary>
        [Test]
        public void ModifiedOnTest()
        {
            // TODO unit test for the property 'ModifiedOn'
        }

    }

}
